{"version":3,"sources":["constants.js","validateInfo.js","firebase.js","useForm.js","components/CreditCardForm.js","App.js","index.js"],"names":["SUCCESS_MSG","validateInfo","values","errors","creditCard","valid","number","cardNumber","expirationDate","cardExpiration","cvv","cardSecurityCode","cardholderName","cardName","postalCode","cardPostalCode","show","variant","message","cname","cnumber","cexp","ccvv","cpostal","trim","isValid","firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","api","Firebase","instance","this","firebase","apps","length","initializeApp","useForm","useState","focus","setValues","setErrors","handleChange","e","target","name","value","handleFocus","handleSubmit","preventDefault","firestore","collection","doc","set","Date","getTime","validCC","date","toGMTString","merge","CreditCardForm","className","cvc","expiry","focused","Form","onSubmit","Group","Control","type","id","placeholder","onChange","onFocus","Row","Col","Button","size","disabled","Alert","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9472994a.chunk.js","sourcesContent":["export const SUCCESS_MSG = \"Our beta program is currently full. We will contact you when more spots are open. Don't worry, we haven't processed your Credit Card payment.\"","import valid from \"card-validator\";\nimport {SUCCESS_MSG} from './constants';\n\nexport default function validateInfo(values) {\n  let errors = {};\n  let creditCard = valid.number(values.cardNumber);\n\n  creditCard.expirationDate = valid.expirationDate(values.cardExpiration);\n  creditCard.cvv = valid.cvv(values.cardSecurityCode);\n  creditCard.cardholderName = valid.cardholderName(values.cardName);\n  creditCard.postalCode = valid.postalCode(values.cardPostalCode);\n\n  errors.show = true;\n  errors.variant = \"danger\";\n  errors.message = \"An unknown error occured. Please try again later\"\n  errors.cname = false;\n  errors.cnumber = false;\n  // errors.ctype = false;\n  errors.cexp = false;\n  errors.ccvv = false;\n  errors.cpostal = false;\n\n  if (values.cardPostalCode === null || !values.cardPostalCode.trim()) {\n    errors.message = \"Credit card postal code is not complete\";\n  } else if (creditCard.postalCode.isValid) {\n    errors.cpostal = true;\n  } else {\n    errors.message = \"Credit card postal code is invalid\";\n  }\n\n  //Card CVV expiration\n  if (values.cardSecurityCode === null || !values.cardSecurityCode.trim()) {\n    errors.message = \"Credit card CVC is not complete\";\n  } else if (creditCard.cvv.isValid) {\n    errors.ccvv = true;\n  } else {\n    errors.message = \"Credit card CVC is invalid\";\n  }\n\n  //Card Expiration Verification\n  if (values.cardExpiration === null || !values.cardExpiration.trim()) {\n    errors.message = \"Credit card expiration date is not complete\";\n  } else if (creditCard.expirationDate.isValid) {\n    errors.cexp = true;\n  } else {\n    errors.message = \"Credit card expiration date is invalid\";\n  }\n\n  // //Card Type Verification\n  // if (\n  //   values.cardType === null ||\n  //   !values.cardType.trim() ||\n  //   creditCard.card === null\n  // ) {\n  //   errors.message = \"Credit card type is not complete\";\n  // } else if (\n  //   creditCard.card.type &&\n  //   creditCard.card.type.toUpperCase() === values.cardType.toUpperCase()\n  // ) {\n  //   errors.ctype = true;\n  // } else {\n  //   errors.message = \"Credit card type is invalid\";\n  // }\n\n  //Card Number Verification\n  if (values.cardNumber === null || !values.cardNumber.trim()) {\n    errors.message = \"Credit card number is not complete\";\n  } else if (creditCard.isValid) {\n    errors.cnumber = true;\n  } else {\n    errors.message = \"Credit card number is invalid\";\n  }\n\n  //Cardholder Name Verification\n  if (values.cardName === null || !values.cardName.trim()) {\n    errors.message = \"Cardholder name is not complete\";\n  } else if (creditCard.cardholderName.isValid) {\n    errors.cname = true;\n  } else {\n    errors.message = \"Cardholder name is invalid\";\n  }\n\n  if (\n    // errors.ctype &&\n    errors.cname &&\n    errors.cnumber &&\n    errors.cexp &&\n    errors.cpostal &&\n    errors.ccvv\n  ) {\n    //errors.variant = \"success\";\n    errors.variant = \"danger\";\n    errors.message = SUCCESS_MSG;\n  }\n\n  return errors;\n}\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_P_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MSG_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n};\n\n// Singleton\nexport class Firebase {\n  constructor() {\n      if (!!Firebase.instance) {\n          return Firebase.instance;\n      }\n\n      Firebase.instance = this;\n      if(!firebase.apps.length) {\n        firebase.initializeApp(firebaseConfig);\n      }\n      this.firebase = firebase;\n\n      return this;\n  }\n}","import { useState } from 'react'\nimport validateInfo from './validateInfo';\nimport {Firebase} from './firebase'\n\nconst api = new Firebase();\n\nconst useForm = () => {\n    const [values, setValues] = useState({\n        cardName: '',\n        cardNumber: '',\n        // cardType: '',\n        cardExpiration: '',\n        cardSecurityCode: '',\n        cardPostalCode: '',\n        focus: ''\n    })\n\n    const [errors, setErrors] = useState({})\n\n    const handleFocus = (e) => {\n        setValues({ \n            ...values,\n            focus: (e.target.name === 'cardSecurityCode') ? 'cvc' : e.target.name\n        });\n    }\n\n    const handleChange = e => {\n        const { name, value } = e.target\n        setValues({\n            ...values,\n            [name]: value\n        })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        const errors = validateInfo(values)\n        if(errors.variant === \"success\") {\n          api.firebase.firestore().collection('app').doc('payments').set({\n            [`${values.cardName}-${new Date().getTime()}`]: {\n              validCC: true,\n              date: new Date().toGMTString()\n            },\n          }, { merge: true })\n        }\n\n        setErrors(validateInfo(values))\n    };\n    \n    return { handleChange, handleFocus, handleSubmit, values, errors };\n};\n\nexport default useForm; ","import React from \"react\";\nimport useForm from \"../useForm\";\nimport { Button, Form, Alert, Row, Col } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./CreditCardForm.css\";\nimport Cards from \"react-credit-cards\";\nimport {SUCCESS_MSG} from '../constants';\nimport \"react-credit-cards/es/styles-compiled.css\";\n\nconst CreditCardForm = () => {\n  const { handleChange, handleFocus, handleSubmit, values, errors } = useForm();\n  return (\n    <div>\n      <div className=\"container\">\n        <div className=\"box justify-content-center align-items-center\">\n          <div className=\"formDiv\">\n          <div className=\"creditCard\">\n          <Cards\n            cvc={values.cardSecurityCode}\n            expiry={values.cardExpiration}\n            focused={values.focus}\n            name={values.cardName}\n            number={values.cardNumber}\n          />\n          </div>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group>\n              <Form.Control\n                type=\"text\"\n                id=\"cardName\"\n                data-testid=\"cardName\"\n                name=\"cardName\"\n                placeholder=\"Cardholder Name\"\n                value={values.cardName}\n                onChange={handleChange}\n                onFocus={handleFocus}\n                isValid={errors.cname}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Control\n                type=\"number\"\n                id=\"cardNumber\"\n                data-testid=\"cardNumber\"\n                name=\"cardNumber\"\n                placeholder=\"Card Number\"\n                value={values.cardNumber}\n                onChange={handleChange}\n                onFocus={handleFocus}\n                isValid={errors.cnumber}\n              />\n            </Form.Group>\n            <Row>\n              {/* <Col>\n                <Form.Group>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"cardType\"\n                    id=\"cardType\"\n                    data-testid=\"cardType\"\n                    placeholder=\"Card Type\"\n                    value={values.cardType}\n                    onChange={handleChange}\n                    onFocus={handleFocus}\n                    isValid={errors.ctype}\n                  />\n                </Form.Group>\n              </Col> */}\n              <Col>\n                <Form.Group>\n                  <Form.Control\n                    type=\"text\"\n                    id=\"cardExpiration\"\n                    data-testid=\"cardExpiration\"\n                    name=\"cardExpiration\"\n                    placeholder=\"Expiration Date\"\n                    value={values.cardExpiration}\n                    onChange={handleChange}\n                    onFocus={handleFocus}\n                    isValid={errors.cexp}\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Form.Group>\n                  <Form.Control\n                    type=\"number\"\n                    id=\"cardSecurityCode\"\n                    data-testid=\"cardSecurityCode\"\n                    name=\"cardSecurityCode\"\n                    placeholder=\"Security Code\"\n                    value={values.cardSecurityCode}\n                    onChange={handleChange}\n                    onFocus={handleFocus}\n                    isValid={errors.ccvv}\n                  />\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group>\n                  <Form.Control\n                    type=\"text\"\n                    id=\"cardPostalCode\"\n                    data-testid=\"cardPostalCode\"\n                    name=\"cardPostalCode\"\n                    placeholder=\"Postal Code\"\n                    value={values.cardPostalCode}\n                    onChange={handleChange}\n                    onFocus={handleFocus}\n                    isValid={errors.cpostal}\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n            <Button\n              size={\"block\"}\n              disabled={SUCCESS_MSG === errors.message}\n              data-testid=\"validateButton\"\n              id=\"validateButton\"\n              type=\"submit\"\n            >\n              Pay Now\n            </Button>\n          </Form>\n          </div>\n          <Alert\n            id=\"alertMessage\"\n            data-testid=\"alertMessage\"\n            variant={errors.variant}\n            show={errors.show}\n          >\n            {errors.message}\n          </Alert>{\" \"}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CreditCardForm;\n","import CreditCardForm from \"./components/CreditCardForm\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CreditCardForm />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}